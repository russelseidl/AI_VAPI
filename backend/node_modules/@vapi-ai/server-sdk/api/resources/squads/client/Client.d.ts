/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Vapi from "../../../index";
export declare namespace Squads {
    interface Options {
        environment?: core.Supplier<environments.VapiEnvironment | string>;
        token: core.Supplier<core.BearerToken>;
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
    }
}
export declare class Squads {
    protected readonly _options: Squads.Options;
    constructor(_options: Squads.Options);
    /**
     * @param {Vapi.SquadsListRequest} request
     * @param {Squads.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.squads.list()
     */
    list(request?: Vapi.SquadsListRequest, requestOptions?: Squads.RequestOptions): Promise<Vapi.Squad[]>;
    /**
     * @param {Vapi.CreateSquadDto} request
     * @param {Squads.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.squads.create({
     *         members: [{}]
     *     })
     */
    create(request: Vapi.CreateSquadDto, requestOptions?: Squads.RequestOptions): Promise<Vapi.Squad>;
    /**
     * @param {string} id
     * @param {Squads.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.squads.get("id")
     */
    get(id: string, requestOptions?: Squads.RequestOptions): Promise<Vapi.Squad>;
    /**
     * @param {string} id
     * @param {Squads.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.squads.delete("id")
     */
    delete(id: string, requestOptions?: Squads.RequestOptions): Promise<Vapi.Squad>;
    /**
     * @param {string} id
     * @param {Vapi.UpdateSquadDto} request
     * @param {Squads.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.squads.update("id", {
     *         members: [{}]
     *     })
     */
    update(id: string, request: Vapi.UpdateSquadDto, requestOptions?: Squads.RequestOptions): Promise<Vapi.Squad>;
    protected _getAuthorizationHeader(): Promise<string>;
}
