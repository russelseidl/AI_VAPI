/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as Vapi from "../index";
export interface Call {
    /** This is the type of call. */
    type?: Vapi.CallType;
    /** These are the costs of individual components of the call in USD. */
    costs?: Vapi.CallCostsItem[];
    messages?: Vapi.CallMessagesItem[];
    /**
     * This is the provider of the call.
     *
     * Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
     */
    phoneCallProvider?: Vapi.CallPhoneCallProvider;
    /**
     * This is the transport of the phone call.
     *
     * Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
     */
    phoneCallTransport?: Vapi.CallPhoneCallTransport;
    /** This is the status of the call. */
    status?: Vapi.CallStatus;
    /** This is the explanation for how the call ended. */
    endedReason?: Vapi.CallEndedReason;
    /** This is the destination where the call ended up being transferred to. If the call was not transferred, this will be empty. */
    destination?: Vapi.CallDestination;
    /** This is the unique identifier for the call. */
    id: string;
    /** This is the unique identifier for the org that this call belongs to. */
    orgId: string;
    /** This is the ISO 8601 date-time string of when the call was created. */
    createdAt: string;
    /** This is the ISO 8601 date-time string of when the call was last updated. */
    updatedAt: string;
    /** This is the ISO 8601 date-time string of when the call was started. */
    startedAt?: string;
    /** This is the ISO 8601 date-time string of when the call was ended. */
    endedAt?: string;
    /** This is the cost of the call in USD. */
    cost?: number;
    /** This is the cost of the call in USD. */
    costBreakdown?: Vapi.CostBreakdown;
    /** This is a copy of assistant artifact plan. This isn't actually stored on the call but rather just returned in POST /call/web to enable artifact creation client side. */
    artifactPlan?: Vapi.ArtifactPlan;
    /** This is the analysis of the call. Configure in `assistant.analysisPlan`. */
    analysis?: Vapi.Analysis;
    /** This is to real-time monitor the call. Configure in `assistant.monitorPlan`. */
    monitor?: Vapi.Monitor;
    /** These are the artifacts created from the call. Configure in `assistant.artifactPlan`. */
    artifact?: Vapi.Artifact;
    /**
     * The ID of the call as provided by the phone number service. callSid in Twilio. conversationUuid in Vonage.
     *
     * Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
     */
    phoneCallProviderId?: string;
    /** This is the assistant that will be used for the call. To use a transient assistant, use `assistant` instead. */
    assistantId?: string;
    /** This is the assistant that will be used for the call. To use an existing assistant, use `assistantId` instead. */
    assistant?: Vapi.CreateAssistantDto;
    /** These are the overrides for the `assistant` or `assistantId`'s settings and template variables. */
    assistantOverrides?: Vapi.AssistantOverrides;
    /** This is the squad that will be used for the call. To use a transient squad, use `squad` instead. */
    squadId?: string;
    /** This is a squad that will be used for the call. To use an existing squad, use `squadId` instead. */
    squad?: Vapi.CreateSquadDto;
    /**
     * This is the phone number that will be used for the call. To use a transient number, use `phoneNumber` instead.
     *
     * Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
     */
    phoneNumberId?: string;
    /**
     * This is the phone number that will be used for the call. To use an existing number, use `phoneNumberId` instead.
     *
     * Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
     */
    phoneNumber?: Vapi.ImportTwilioPhoneNumberDto;
    /**
     * This is the customer that will be called. To call a transient customer , use `customer` instead.
     *
     * Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
     */
    customerId?: string;
    /**
     * This is the customer that will be called. To call an existing customer, use `customerId` instead.
     *
     * Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
     */
    customer?: Vapi.CreateCustomerDto;
    /** This is the name of the call. This is just for your own reference. */
    name?: string;
}
